stages:
  - build

# -------------------------------------------------------------------------
# Build stage
# -------------------------------------------------------------------------

#freebsd 11 build:
#  variables:
#    CI_DEBUG_TRACE: "true"
#  stage: build
#  tags:
#    - freebsd11
#  script:
#    - ls -al /


centos 7 build:
  stage: build
  tags:
    - os-manager
  image: registry.gitlab.com/egloo.ca/os-manager/builder-image:os7
  script:
    # Prep build directory
    - mkdir -p result centos7/builds centos7/logs
    - sudo yum -y install automake libtool
    # Build packages
    - ./autogen.sh
    - ./configure
    - make dist
    - rpmbuild -bs ./deploy/rpm/netify-fwa.spec --define "_sourcedir $PWD" --define "_srcrpmdir $PWD"
    - mock -v --old-chroot --resultdir=result *.src.rpm
    # Copy packages and logs to artifacts
    - grep -v DEBUG result/root.log
    - mv result/*rpm centos7/builds/
    - mv result/*log centos7/logs/
    - rm -rf result
  artifacts:
    when: always
    paths:
    - centos7
    expire_in: 1 day


centos 8 build:
  stage: build
  tags:
    - os-manager
  image: registry.gitlab.com/egloo.ca/os-manager/builder-image:os8
  script:
    # Prep build directory
    - mkdir -p result centos8/builds centos8/logs
    - sudo yum -y install automake libtool
    # Build packages
    - ./autogen.sh
    - ./configure
    - make dist
    - rpmbuild -bs ./deploy/rpm/netify-fwa.spec --define "_sourcedir $PWD" --define "_srcrpmdir $PWD"
    - mock -v --old-chroot --resultdir=result *.src.rpm
    # Copy packages and logs to artifacts
    - grep -v DEBUG result/root.log
    - mv result/*rpm centos8/builds/
    - mv result/*log centos8/logs/
    - rm -rf result
  artifacts:
    when: always
    paths:
    - centos8
    expire_in: 1 day


debian 10 build:
  stage: build
  tags:
    - os-manager
  image: debian:10
  script:
    # Prep build directory
    - mkdir -p debian10/builds debian10/logs
    - apt update
    - apt install -y automake libtool pkg-config make
    # Build packages
    - ./autogen.sh
    - ./configure --disable-dependency-tracking
    - make dist-gzip
    # Copy packages and logs to artifacts
    - mv *.tar.gz debian10/builds/
    - mv config.log debian10/logs/
  artifacts:
    when: always
    paths:
    - debian10
    expire_in: 1 day


openwrt 19.07 build:
  stage: build
  tags:
    - os-manager
  image: debian:10
  script:
    # Prep build directory
    - mkdir -p openwrt1907/builds openwrt1907/logs
    - apt update
    - apt install -y rsync autoconf automake make libtool pkg-config
    # OpenWrt driver
    # Build packages
    - ./autogen.sh
    - ./configure --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --infodir=\${prefix}/share/info --sysconfdir=/etc --localstatedir=/var
    # Quick hack
    - rm -rf openwrt-install deploy/openwrt-install
    - make DESTDIR=openwrt-install install
    - mkdir -p openwrt-install/etc/init.d
    - mkdir -p openwrt-install/etc/netify-fwa
    - mkdir -p openwrt-install/usr/sbin
    - mkdir -p openwrt-install/var/run/netify-fwa
    - cp deploy/openwrt/netify-fwa.init openwrt-install/etc/init.d/netify-fwa
    - cp deploy/openwrt-install/etc/netify-fwa/* openwrt-install/etc/netify-fwa/
    - cp deploy/openwrt-install/usr/sbin/netify-fwa openwrt-install/usr/sbin/netify-fwa
    - rm -f openwrt-install/usr/share/netify-fwa/nfa_fw_clearos.py
    - rm -f openwrt-install/usr/share/netify-fwa/nfa_fw_firewalld.py
    - rm -f openwrt-install/usr/share/netify-fwa/nfa_fw_clearos.py
    - rm -f openwrt-install/usr/share/netify-fwa/nfa_fw_pf.py
    - rm -f openwrt-install/usr/share/netify-fwa/nfa_fw_pfsense.py
    - sed -i -e 's/^firewall-engine.*/firewall-engine = openwrt/' openwrt-install/etc/netify-fwa/netify-fwa.ini
    - sed -i -e 's/^interfaces-internal.*/interfaces-internal = br-lan/' openwrt-install/etc/netify-fwa/netify-fwa.ini
    - sed -i -e 's/^mark-mask.*/mark-mask = 0xff0000/' openwrt-install/etc/netify-fwa/netify-fwa.ini
    - sed -i -e 's/^mark-bitshift.*/mark-bitshift = 16/' openwrt-install/etc/netify-fwa/netify-fwa.ini
    - tar -czvf netify-fwa.tar.gz -C openwrt-install .
    # Copy packages and logs to artifacts
    - mv ../*.tar.gz openwrt1907/builds/
  artifacts:
    when: always
    paths:
    - openwrt1907
    expire_in: 30 days

# -------------------------------------------------------------------------
# Test stage
# -------------------------------------------------------------------------

#pfsense 2.4.x test:
#  stage: test
#  tags:
#    - pfsense24
#  script:
#    - ls -al /

#clearos 7 test:
#  stage: test
#  tags:
#    - os-manager
#  image: centos:7
#  script:
#    - rpm -Uvh http://mirrors.egloo.ca/egloo/clearos/7/devel/staging/clearos-release-7-current.noarch.rpm
#    - rpm --import http://download.netify.ai/netify/clearos/7/testing/RPM-GPG-KEY-netify
#    - curl http://download.netify.ai/netify/clearos/7/netify.repo --output /etc/yum.repos.d/netify.repo 
#    - yum -y --nogpgcheck --enablerepo=clearos-centos,clearos-centos-updates,clearos-contribs-testing,netify-testing localinstall centos7/builds/*.rpm
